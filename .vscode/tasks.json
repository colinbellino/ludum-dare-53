{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Windows: build (debug)",
            "type": "shell",
            "command": "date_time=$(date +%Y-%m-%d_%H-%M) && echo $date_time && ./build_version.sh && mkdir -p ./builds/Windows/$date_time && godot --headless --export-debug 'Windows' ./builds/Windows/$date_time/SpaceHaulers.exe && ./builds/Windows/$date_time/SpaceHaulers.exe",
            "problemMatcher": []
        },
        {
            "label": "Windows: build (release)",
            "type": "shell",
            "command": "date_time=$(date +%Y-%m-%d_%H-%M) && echo $date_time && ./build_version.sh && mkdir -p ./builds/Windows/$date_time && godot --headless --export-release 'Windows' ./builds/Windows/$date_time/SpaceHaulers.exe && ./builds/Windows/$date_time/SpaceHaulers.exe",
            "problemMatcher": []
        },
        {
            "label": "Windows: build (release) + deploy",
            "type": "shell",
            "command": "date_time=$(date +%Y-%m-%d_%H-%M) && echo $date_time && ./build_version.sh && mkdir -p ./builds/Windows/$date_time && godot --headless --export-release 'Windows' ./builds/Windows/$date_time/SpaceHaulers.exe && butler push ./builds/Windows/$date_time colinbellino/space-haulers:win",
            "problemMatcher": []
        },
        {
            "label": "Windows: deploy",
            "type": "shell",
            "command": "butler push ./builds/Windows/${input:folder} colinbellino/space-haulers:win",
            "problemMatcher": []
        },
        {
            "label": "Mac: build (debug)",
            "type": "shell",
            "command": "date_time=$(date +%Y-%m-%d_%H-%M) && echo $date_time && ./build_version.sh && mkdir -p ./builds/Mac/$date_time && godot --headless --export-debug 'Mac' ./builds/Mac/$date_time/SpaceHaulers.app && open ./builds/Mac/$date_time/SpaceHaulers.app",
            "problemMatcher": []
        },
        {
            "label": "Mac: build (release)",
            "type": "shell",
            "command": "date_time=$(date +%Y-%m-%d_%H-%M) && echo $date_time && ./build_version.sh && mkdir -p ./builds/Mac/$date_time && godot --headless --export-release 'Mac' ./builds/Mac/$date_time/SpaceHaulers.app && open ./builds/Mac/$date_time/SpaceHaulers.app",
            "problemMatcher": []
        },
        {
            "label": "Mac: build (release) + deploy",
            "type": "shell",
            "command": "date_time=$(date +%Y-%m-%d_%H-%M) && echo $date_time && ./build_version.sh && mkdir -p ./builds/Mac/$date_time && godot --headless --export-release 'Mac' ./builds/Mac/$date_time/SpaceHaulers.app && butler push ./builds/Mac/$date_time colinbellino/space-haulers:mac",
            "problemMatcher": []
        },
        {
            "label": "Mac: deploy",
            "type": "shell",
            "command": "butler push ./builds/Mac/${input:folder} colinbellino/space-haulers:mac",
            "problemMatcher": []
        },
        {
            "label": "Web: build (debug)",
            "type": "shell",
            "command": "date_time=$(date +%Y-%m-%d_%H-%M) && echo $date_time && ./build_version.sh && mkdir -p ./builds/Web/$date_time && godot --headless --export-debug 'Web' ./builds/Web/$date_time/index.html && serve --no-clipboard ./builds/Web/$date_time",
            "problemMatcher": []
        },
        {
            "label": "Web: build (release)",
            "type": "shell",
            "command": "date_time=$(date +%Y-%m-%d_%H-%M) && echo $date_time && ./build_version.sh && mkdir -p ./builds/Web/$date_time && godot --headless --export-release 'Web' ./builds/Web/$date_time/index.html && serve --no-clipboard ./builds/Web/$date_time",
            "problemMatcher": []
        },
        {
            "label": "Web: build (release) + deploy",
            "type": "shell",
            "command": "date_time=$(date +%Y-%m-%d_%H-%M) && echo $date_time && ./build_version.sh && mkdir -p ./builds/Web/$date_time && godot --headless --export-release 'Web' ./builds/Web/$date_time/index.html && butler push ./builds/Web/$date_time colinbellino/space-haulers:web",
            "problemMatcher": []
        },
        {
            "label": "Web: deploy",
            "type": "shell",
            "command": "butler push ./builds/Web/${input:folder} colinbellino/space-haulers:web",
            "problemMatcher": []
        },
        {
            "label": "Linux: build (release)",
            "type": "shell",
            "command": "date_time=$(date +%Y-%m-%d_%H-%M) && echo $date_time && ./build_version.sh && mkdir -p ./builds/Linux/$date_time && godot --headless --export-release 'Linux' ./builds/Linux/$date_time/SpaceHaulers && ./builds/Linux/$date_time/SpaceHaulers",
            "problemMatcher": []
        },
        {
            "label": "Linux: build (release) + deploy",
            "type": "shell",
            "command": "date_time=$(date +%Y-%m-%d_%H-%M) && echo $date_time && ./build_version.sh && mkdir -p ./builds/Linux/$date_time && godot --headless --export-release 'Linux' ./builds/Linux/$date_time/SpaceHaulers && butler push ./builds/Linux/$date_time colinbellino/space-haulers:linux",
            "problemMatcher": []
        },
        {
            "label": "Linux: deploy",
            "type": "shell",
            "command": "butler push ./builds/Linux/${input:folder} colinbellino/space-haulers:linux",
            "problemMatcher": []
        },
        {
            "label": "DEPLOY ALL THE THINGS",
            "type": "shell",
            "command": "echo ALL DONE!",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Web: build (release) + deploy",
                "Windows: build (release) + deploy",
                "Mac: build (release) + deploy",
                "Linux: build (release) + deploy",
            ],
            "problemMatcher": []
        },
    ],
    "inputs": [
        {
            "id": "folder",
            "type": "promptString",
            "description": "Folder to deploy"
        }
    ]
}
